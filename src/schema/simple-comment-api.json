{
  "openapi": "3.0.2",
  "info": {
    "title": "Comment API",
    "description": "A REST OpenAPI 3.0 Comment API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/comment-api/v1"
    }
  ],
  "security": [
    {},
    {
      "BasicAuth": []
    },
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/discussion": {
      "get": {
        "responses": {
          "200": {
            "description": "List available discussions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Discussion"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to view discussion urls",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuth": []
          }
        ],
        "summary": "Discussion discovery",
        "description": "Receive a listing of all discussions"
      }
    },
    "/discussion/{discussionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "List comments for {discussionId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Discussion"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to view discussion {discussionId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "{discussionId} is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuth": []
          }
        ],
        "summary": "View specific discussion"
      },
      "post": {
        "responses": {
          "201": {
            "description": "Comment created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Request format not understood",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to post this comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "413": {
            "description": "Comment is too long",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "Possible duplicate comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too many comments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Post a comment to specific discussion"
      },
      "delete": {
        "responses": {
          "202": {
            "description": "Discussion {discussionId} deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to delete this comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "summary": "Delete a discussion"
    },
    "/discussion/{discussionId}/{commentId}": {
      "get": {
        "responses": {
          "200": {
            "description": "View comment {commentId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to view this comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Comment {commentId} not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuth": []
          }
        ],
        "summary": "View a specific comment"
      },
      "put": {
        "responses": {
          "204": {
            "description": "Comment {commentId} updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to update this comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Comment {commentId} not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Edit a specific comment"
      },
      "delete": {
        "responses": {
          "202": {
            "description": "Comment deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to delete this comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Comment {commentId} not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a specific comment"
      },
    },
    "/user": {
      "get": {
        "responses": {
          "200": {
            "description": "List users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to view users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
        },
        "security": [
          {},
          {
            "BearerAuth": []
          }
        ],
        "summary": "List all users"
      },
      "post": {
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "400": {
            "description": "Request format not understood",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Requesting user is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Requestion user is not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "Possible duplicate user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "summary": "Create a user"
    },
    "/user/{userId}": {
      "get": {
        "responses": {
          "200": {
            "description": "View user {userId}",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to view this user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User {userId} not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "BearerAuth": []
          }
        ],
        "summary": "View user"
      },
      "put": {
        "responses": {
          "204": {
            "description": "User {userId} updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to update this user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User {userId} not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Edit a user"
      },
      "delete": {
        "responses": {
          "202": {
            "description": "User deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "401": {
            "description": "User is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to delete this user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User {userId} not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a user"
      }
    },
    "/auth": {
      "summary": "Handle user authentication",
      "post": {
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            }
          },
          "400": {
            "description": "Request format not understood",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Requesting user is not authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Requesting user is not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "425": {
            "description": "Possible duplicate user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "summary": "Accept a user name and password, return authentication token"
      }
    },
    "/admin": {
      "summary": "Manage policy"
    }
  },
  "components": {
    "securitySchemes": {
      "BasicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "'BasicAuth' returns an 'BearerAuth' bearer token"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "All API requests that require authentication shall be 'BearerAuth'",
        "bearerFormat": "JWT with 'user' field"
      }
    },
    "schemas": {
      "Success": {
        "type": "object",
        "required": [
          "message",
          "code"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "minimum": 200,
            "maximum": 299
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "message",
          "code"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "minimum": 400,
            "maximum": 499
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "byte"
          },
          "discussion": {
            "type": "string",
            "format": "byte"
          },
          "user": {
            "type": "string",
            "format": "byte"
          },
          "text": {
            "type": "string"
          },
          "parentComment": {
            "type": "string",
            "format": "byte"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "discussion",
          "user",
          "text",
          "parentComment",
          "dateCreated",
          "authToken"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "byte"
          },
          "verified": {
            "type": "boolean"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "true if the user is admin, false otherwise"
          }
        }
      },
      "AuthToken": {
        "type": "string"
      },
      "Discussion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "byte"
          },
          "isLocked": {
            "type": "boolean"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          }
        }
      }
    },
    "parameters": {
      "userId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "byte"
        }
      },
      "commentId": {
        "name": "commentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "byte"
        }
      },
      "discussionId": {
        "name": "discussionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "byte"
        }
      },
      "authToken": {
        "name": "authToken",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "format": "byte"
        }
      }
    }
  }
}